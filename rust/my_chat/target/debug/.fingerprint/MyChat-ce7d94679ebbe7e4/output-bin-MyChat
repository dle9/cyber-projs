{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `tokio`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":745,"byte_end":750,"line_start":22,"line_end":22,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    tokio::pin!(messages);","highlight_start":5,"highlight_end":10}],"label":"use of undeclared crate or module `tokio`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `tokio`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:22:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    tokio::pin!(messages);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `tokio`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `tokio`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":879,"byte_end":884,"line_start":31,"line_end":31,"column_start":3,"column_end":8,"is_primary":true,"text":[{"text":"#[tokio::main]","highlight_start":3,"highlight_end":8}],"label":"use of undeclared crate or module `tokio`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `tokio`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:31:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[tokio::main]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `tokio`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`{async block@Subscriber::into_stream::{closure#0}}` cannot be unpinned","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":804,"byte_end":808,"line_start":24,"line_end":24,"column_start":36,"column_end":40,"is_primary":true,"text":[{"text":"    while let Some(msg) = messages.next().await {","highlight_start":36,"highlight_end":40}],"label":"within `__Origin<'_, Result<Message, ...>, ...>`, the trait `Unpin` is not implemented for `{async block@Subscriber::into_stream::{closure#0}}`, which is required by `impl Stream<Item = Result<Message, Box<(dyn std::error::Error + Send + Sync + 'static)>>>: Unpin`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the full trait has been written to '/mnt/c/Users/deric/dleer/cybersecurity/lab/rust/MyChat/target/debug/deps/MyChat-ce7d94679ebbe7e4.long-type-9149350541226114788.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using the `pin!` macro\nconsider using `Box::pin` if you need to access the pinned value outside of the current scope","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required because it appears within the type `__Origin<'_, Result<Message, ...>, ...>`","code":null,"level":"note","spans":[{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":39866,"byte_end":39874,"line_start":1225,"line_end":1225,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"        $vis struct __Origin <'__pin, $($impl_generics)*>","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":17015,"byte_end":17404,"line_start":563,"line_end":572,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            $crate::__pin_project_make_unpin_impl! {","highlight_start":13,"highlight_end":53},{"text":"                [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":43},{"text":"                [$vis $ident]","highlight_start":1,"highlight_end":30},{"text":"                [$($impl_generics)*] [$($ty_generics)*] [$(where $($where_clause)*)?]","highlight_start":1,"highlight_end":86},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $field: $crate::__pin_project_make_unpin_bound!(","highlight_start":1,"highlight_end":69},{"text":"                        $(#[$pin])? $field_ty","highlight_start":1,"highlight_end":46},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                ),+","highlight_start":1,"highlight_end":20},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":12923,"byte_end":13403,"line_start":455,"line_end":466,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_constant! {","highlight_start":9,"highlight_end":42},{"text":"            [$(#[$attrs])* $vis $struct_ty_ident $ident]","highlight_start":1,"highlight_end":57},{"text":"            [$($proj_mut_ident)?] [$($proj_ref_ident)?] [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":82},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$proj_vis]","highlight_start":1,"highlight_end":24},{"text":"            [$($def_generics)*] [$($impl_generics)*]","highlight_start":1,"highlight_end":53},{"text":"            [$($ty_generics)*] [$(where $($where_clause)*)?]","highlight_start":1,"highlight_end":61},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                $($body_data)*","highlight_start":1,"highlight_end":31},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            $($(#[$drop_impl_attrs])* impl $($pinned_drop)*)?","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":52232,"byte_end":53482,"line_start":1627,"line_end":1661,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_expand! {","highlight_start":9,"highlight_end":40},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$proj_vis]","highlight_start":1,"highlight_end":24},{"text":"            [$($attrs)* $vis $struct_ty_ident $ident]","highlight_start":1,"highlight_end":54},{"text":"            [$(<","highlight_start":1,"highlight_end":17},{"text":"                $( $lifetime $(: $lifetime_bound)? ,)*","highlight_start":1,"highlight_end":55},{"text":"                $( $generics","highlight_start":1,"highlight_end":29},{"text":"                    $(: $generics_bound)?","highlight_start":1,"highlight_end":42},{"text":"                    $(: ?$generics_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(: $generics_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(= $generics_default)?","highlight_start":1,"highlight_end":44},{"text":"                ),*","highlight_start":1,"highlight_end":20},{"text":"            >)?]","highlight_start":1,"highlight_end":17},{"text":"            [$(","highlight_start":1,"highlight_end":16},{"text":"                $( $lifetime $(: $lifetime_bound)? ,)*","highlight_start":1,"highlight_end":55},{"text":"                $( $generics","highlight_start":1,"highlight_end":29},{"text":"                    $(: $generics_bound)?","highlight_start":1,"highlight_end":42},{"text":"                    $(: ?$generics_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(: $generics_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"                ),*","highlight_start":1,"highlight_end":20},{"text":"            )?]","highlight_start":1,"highlight_end":16},{"text":"            [$( $( $lifetime ,)* $( $generics ),* )?]","highlight_start":1,"highlight_end":54},{"text":"            [$(where $( $where_clause_ty","highlight_start":1,"highlight_end":41},{"text":"                $(: $where_clause_bound)?","highlight_start":1,"highlight_end":42},{"text":"                $(: ?$where_clause_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                $(: $where_clause_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"            ),* )?]","highlight_start":1,"highlight_end":20},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                $($body_data)*","highlight_start":1,"highlight_end":31},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            $($(#[$drop_impl_attrs])* impl $($pinned_drop)*)?","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":50302,"byte_end":50594,"line_start":1565,"line_end":1573,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10622,"byte_end":10708,"line_start":385,"line_end":388,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/async-stream-0.3.5/src/async_stream.rs","byte_start":184,"byte_end":363,"line_start":9,"line_end":18,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    #[doc(hidden)]","highlight_start":1,"highlight_end":19},{"text":"    #[derive(Debug)]","highlight_start":1,"highlight_end":21},{"text":"    pub struct AsyncStream<T, U> {","highlight_start":1,"highlight_end":35},{"text":"        rx: Receiver<T>,","highlight_start":1,"highlight_end":25},{"text":"        done: bool,","highlight_start":1,"highlight_end":20},{"text":"        #[pin]","highlight_start":1,"highlight_end":15},{"text":"        generator: U,","highlight_start":1,"highlight_end":22},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10565,"byte_end":10589,"line_start":383,"line_end":383,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":51208,"byte_end":51249,"line_start":1598,"line_end":1598,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_expand!","def_site_span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":11100,"byte_end":11133,"line_start":403,"line_end":403,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_expand {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_constant!","def_site_span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":13445,"byte_end":13480,"line_start":472,"line_end":472,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_constant {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_make_unpin_impl!","def_site_span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":38246,"byte_end":38288,"line_start":1192,"line_end":1192,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_make_unpin_impl {","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `AsyncStream<Result<Message, ...>, ...>` to implement `Unpin`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/mnt/c/Users/deric/dleer/cybersecurity/lab/rust/MyChat/target/debug/deps/MyChat-ce7d94679ebbe7e4.long-type-14121558569496138564.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required because it appears within the type `impl Stream<Item = Result<Message, ...>>`","code":null,"level":"note","spans":[{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/mini-redis-0.4.1/src/client.rs","byte_start":14538,"byte_end":14580,"line_start":398,"line_end":398,"column_start":37,"column_end":79,"is_primary":true,"text":[{"text":"    pub fn into_stream(mut self) -> impl Stream<Item = crate::Result<Message>> {","highlight_start":37,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/mini-redis-0.4.1/src/client.rs","byte_start":14538,"byte_end":14580,"line_start":398,"line_end":398,"column_start":37,"column_end":79,"is_primary":false,"text":[{"text":"    pub fn into_stream(mut self) -> impl Stream<Item = crate::Result<Message>> {","highlight_start":37,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `impl Trait`","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required by a bound in `tokio_stream::StreamExt::next`","code":null,"level":"note","spans":[{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-stream-0.1.15/src/stream_ext.rs","byte_start":3694,"byte_end":3698,"line_start":144,"line_end":144,"column_start":8,"column_end":12,"is_primary":false,"text":[{"text":"    fn next(&mut self) -> Next<'_, Self>","highlight_start":8,"highlight_end":12}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-stream-0.1.15/src/stream_ext.rs","byte_start":3752,"byte_end":3757,"line_start":146,"line_end":146,"column_start":15,"column_end":20,"is_primary":true,"text":[{"text":"        Self: Unpin,","highlight_start":15,"highlight_end":20}],"label":"required by this bound in `StreamExt::next`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: `{async block@Subscriber::into_stream::{closure#0}}` cannot be unpinned\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:24:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    while let Some(msg) = messages.next().await {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mwithin `__Origin<'_, Result<Message, ...>, ...>`, the trait `Unpin` is not implemented for `{async block@Subscriber::into_stream::{closure#0}}`, which is required by `impl Stream<Item = Result<Message, Box<(dyn std::error::Error + Send + Sync + 'static)>>>: Unpin`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full trait has been written to '/mnt/c/Users/deric/dleer/cybersecurity/lab/rust/MyChat/target/debug/deps/MyChat-ce7d94679ebbe7e4.long-type-9149350541226114788.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using the `pin!` macro\u001b[0m\n\u001b[0m            consider using `Box::pin` if you need to access the pinned value outside of the current scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required because it appears within the type `__Origin<'_, Result<Message, ...>, ...>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/async-stream-0.3.5/src/async_stream.rs:9:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[doc(hidden)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct AsyncStream<T, U> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `AsyncStream<Result<Message, ...>, ...>` to implement `Unpin`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/mnt/c/Users/deric/dleer/cybersecurity/lab/rust/MyChat/target/debug/deps/MyChat-ce7d94679ebbe7e4.long-type-14121558569496138564.txt'\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required because it appears within the type `impl Stream<Item = Result<Message, ...>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/mini-redis-0.4.1/src/client.rs:398:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m398\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mself) -> impl Stream<Item = crate::Result<Message>> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tokio_stream::StreamExt::next`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-stream-0.1.15/src/stream_ext.rs:146:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn next(&mut self) -> Next<'_, Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this associated function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Self: Unpin,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `StreamExt::next`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::__pin_project_make_unpin_impl` which comes from the expansion of the macro `pin_project` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`{async block@Subscriber::into_stream::{closure#0}}` cannot be unpinned","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":811,"byte_end":816,"line_start":24,"line_end":24,"column_start":43,"column_end":48,"is_primary":true,"text":[{"text":"    while let Some(msg) = messages.next().await {","highlight_start":43,"highlight_end":48}],"label":"within `__Origin<'_, Result<Message, ...>, ...>`, the trait `Unpin` is not implemented for `{async block@Subscriber::into_stream::{closure#0}}`, which is required by `tokio_stream::stream_ext::next::Next<'_, impl Stream<Item = Result<Message, Box<(dyn std::error::Error + Send + Sync + 'static)>>>>: IntoFuture`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":811,"byte_end":816,"line_start":24,"line_end":24,"column_start":43,"column_end":48,"is_primary":false,"text":[{"text":"    while let Some(msg) = messages.next().await {","highlight_start":43,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `await` expression","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the full trait has been written to '/mnt/c/Users/deric/dleer/cybersecurity/lab/rust/MyChat/target/debug/deps/MyChat-ce7d94679ebbe7e4.long-type-13665841927735818435.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using the `pin!` macro\nconsider using `Box::pin` if you need to access the pinned value outside of the current scope","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required because it appears within the type `__Origin<'_, Result<Message, ...>, ...>`","code":null,"level":"note","spans":[{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":39866,"byte_end":39874,"line_start":1225,"line_end":1225,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"        $vis struct __Origin <'__pin, $($impl_generics)*>","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":17015,"byte_end":17404,"line_start":563,"line_end":572,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            $crate::__pin_project_make_unpin_impl! {","highlight_start":13,"highlight_end":53},{"text":"                [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":43},{"text":"                [$vis $ident]","highlight_start":1,"highlight_end":30},{"text":"                [$($impl_generics)*] [$($ty_generics)*] [$(where $($where_clause)*)?]","highlight_start":1,"highlight_end":86},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $field: $crate::__pin_project_make_unpin_bound!(","highlight_start":1,"highlight_end":69},{"text":"                        $(#[$pin])? $field_ty","highlight_start":1,"highlight_end":46},{"text":"                    )","highlight_start":1,"highlight_end":22},{"text":"                ),+","highlight_start":1,"highlight_end":20},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":12923,"byte_end":13403,"line_start":455,"line_end":466,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_constant! {","highlight_start":9,"highlight_end":42},{"text":"            [$(#[$attrs])* $vis $struct_ty_ident $ident]","highlight_start":1,"highlight_end":57},{"text":"            [$($proj_mut_ident)?] [$($proj_ref_ident)?] [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":82},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$proj_vis]","highlight_start":1,"highlight_end":24},{"text":"            [$($def_generics)*] [$($impl_generics)*]","highlight_start":1,"highlight_end":53},{"text":"            [$($ty_generics)*] [$(where $($where_clause)*)?]","highlight_start":1,"highlight_end":61},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                $($body_data)*","highlight_start":1,"highlight_end":31},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            $($(#[$drop_impl_attrs])* impl $($pinned_drop)*)?","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":52232,"byte_end":53482,"line_start":1627,"line_end":1661,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_expand! {","highlight_start":9,"highlight_end":40},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$proj_vis]","highlight_start":1,"highlight_end":24},{"text":"            [$($attrs)* $vis $struct_ty_ident $ident]","highlight_start":1,"highlight_end":54},{"text":"            [$(<","highlight_start":1,"highlight_end":17},{"text":"                $( $lifetime $(: $lifetime_bound)? ,)*","highlight_start":1,"highlight_end":55},{"text":"                $( $generics","highlight_start":1,"highlight_end":29},{"text":"                    $(: $generics_bound)?","highlight_start":1,"highlight_end":42},{"text":"                    $(: ?$generics_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(: $generics_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(= $generics_default)?","highlight_start":1,"highlight_end":44},{"text":"                ),*","highlight_start":1,"highlight_end":20},{"text":"            >)?]","highlight_start":1,"highlight_end":17},{"text":"            [$(","highlight_start":1,"highlight_end":16},{"text":"                $( $lifetime $(: $lifetime_bound)? ,)*","highlight_start":1,"highlight_end":55},{"text":"                $( $generics","highlight_start":1,"highlight_end":29},{"text":"                    $(: $generics_bound)?","highlight_start":1,"highlight_end":42},{"text":"                    $(: ?$generics_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(: $generics_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"                ),*","highlight_start":1,"highlight_end":20},{"text":"            )?]","highlight_start":1,"highlight_end":16},{"text":"            [$( $( $lifetime ,)* $( $generics ),* )?]","highlight_start":1,"highlight_end":54},{"text":"            [$(where $( $where_clause_ty","highlight_start":1,"highlight_end":41},{"text":"                $(: $where_clause_bound)?","highlight_start":1,"highlight_end":42},{"text":"                $(: ?$where_clause_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                $(: $where_clause_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"            ),* )?]","highlight_start":1,"highlight_end":20},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                $($body_data)*","highlight_start":1,"highlight_end":31},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            $($(#[$drop_impl_attrs])* impl $($pinned_drop)*)?","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":50302,"byte_end":50594,"line_start":1565,"line_end":1573,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":49713,"byte_end":49962,"line_start":1545,"line_end":1552,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10622,"byte_end":10708,"line_start":385,"line_end":388,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/async-stream-0.3.5/src/async_stream.rs","byte_start":184,"byte_end":363,"line_start":9,"line_end":18,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    #[doc(hidden)]","highlight_start":1,"highlight_end":19},{"text":"    #[derive(Debug)]","highlight_start":1,"highlight_end":21},{"text":"    pub struct AsyncStream<T, U> {","highlight_start":1,"highlight_end":35},{"text":"        rx: Receiver<T>,","highlight_start":1,"highlight_end":25},{"text":"        done: bool,","highlight_start":1,"highlight_end":20},{"text":"        #[pin]","highlight_start":1,"highlight_end":15},{"text":"        generator: U,","highlight_start":1,"highlight_end":22},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":10565,"byte_end":10589,"line_start":383,"line_end":383,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":47225,"byte_end":47260,"line_start":1452,"line_end":1452,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":51208,"byte_end":51249,"line_start":1598,"line_end":1598,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_expand!","def_site_span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":11100,"byte_end":11133,"line_start":403,"line_end":403,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_expand {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_constant!","def_site_span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":13445,"byte_end":13480,"line_start":472,"line_end":472,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_constant {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_make_unpin_impl!","def_site_span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs","byte_start":38246,"byte_end":38288,"line_start":1192,"line_end":1192,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_make_unpin_impl {","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `AsyncStream<Result<Message, ...>, ...>` to implement `Unpin`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/mnt/c/Users/deric/dleer/cybersecurity/lab/rust/MyChat/target/debug/deps/MyChat-ce7d94679ebbe7e4.long-type-14121558569496138564.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required because it appears within the type `impl Stream<Item = Result<Message, ...>>`","code":null,"level":"note","spans":[{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/mini-redis-0.4.1/src/client.rs","byte_start":14538,"byte_end":14580,"line_start":398,"line_end":398,"column_start":37,"column_end":79,"is_primary":true,"text":[{"text":"    pub fn into_stream(mut self) -> impl Stream<Item = crate::Result<Message>> {","highlight_start":37,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/mini-redis-0.4.1/src/client.rs","byte_start":14538,"byte_end":14580,"line_start":398,"line_end":398,"column_start":37,"column_end":79,"is_primary":false,"text":[{"text":"    pub fn into_stream(mut self) -> impl Stream<Item = crate::Result<Message>> {","highlight_start":37,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `impl Trait`","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `Next<'_, impl Stream<Item = ...>>` to implement `Future`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/mnt/c/Users/deric/dleer/cybersecurity/lab/rust/MyChat/target/debug/deps/MyChat-ce7d94679ebbe7e4.long-type-17773997249295218401.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `Next<'_, impl Stream<Item = ...>>` to implement `IntoFuture`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full type name has been written to '/mnt/c/Users/deric/dleer/cybersecurity/lab/rust/MyChat/target/debug/deps/MyChat-ce7d94679ebbe7e4.long-type-17773997249295218401.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the `.await`","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":810,"byte_end":816,"line_start":24,"line_end":24,"column_start":42,"column_end":48,"is_primary":true,"text":[{"text":"    while let Some(msg) = messages.next().await {","highlight_start":42,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: `{async block@Subscriber::into_stream::{closure#0}}` cannot be unpinned\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:24:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    while let Some(msg) = messages.next().await {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mwithin `__Origin<'_, Result<Message, ...>, ...>`, the trait `Unpin` is not implemented for `{async block@Subscriber::into_stream::{closure#0}}`, which is required by `tokio_stream::stream_ext::next::Next<'_, impl Stream<Item = Result<Message, Box<(dyn std::error::Error + Send + Sync + 'static)>>>>: IntoFuture`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove the `.await`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full trait has been written to '/mnt/c/Users/deric/dleer/cybersecurity/lab/rust/MyChat/target/debug/deps/MyChat-ce7d94679ebbe7e4.long-type-13665841927735818435.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using the `pin!` macro\u001b[0m\n\u001b[0m            consider using `Box::pin` if you need to access the pinned value outside of the current scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required because it appears within the type `__Origin<'_, Result<Message, ...>, ...>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/async-stream-0.3.5/src/async_stream.rs:9:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[doc(hidden)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct AsyncStream<T, U> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `AsyncStream<Result<Message, ...>, ...>` to implement `Unpin`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/mnt/c/Users/deric/dleer/cybersecurity/lab/rust/MyChat/target/debug/deps/MyChat-ce7d94679ebbe7e4.long-type-14121558569496138564.txt'\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required because it appears within the type `impl Stream<Item = Result<Message, ...>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/dle/.cargo/registry/src/index.crates.io-6f17d22bba15001f/mini-redis-0.4.1/src/client.rs:398:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m398\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mself) -> impl Stream<Item = crate::Result<Message>> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Next<'_, impl Stream<Item = ...>>` to implement `Future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/mnt/c/Users/deric/dleer/cybersecurity/lab/rust/MyChat/target/debug/deps/MyChat-ce7d94679ebbe7e4.long-type-17773997249295218401.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Next<'_, impl Stream<Item = ...>>` to implement `IntoFuture`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/mnt/c/Users/deric/dleer/cybersecurity/lab/rust/MyChat/target/debug/deps/MyChat-ce7d94679ebbe7e4.long-type-17773997249295218401.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::__pin_project_make_unpin_impl` which comes from the expansion of the macro `pin_project` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `tokio`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":940,"byte_end":945,"line_start":33,"line_end":33,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    tokio::spawn(async {","highlight_start":5,"highlight_end":10}],"label":"use of undeclared crate or module `tokio`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `tokio`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:33:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    tokio::spawn(async {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `tokio`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`main` function is not allowed to be `async`","code":{"code":"E0752","explanation":"The entry point of the program was marked as `async`.\n\nErroneous code example:\n\n```compile_fail,E0752\nasync fn main() -> Result<(), ()> { // error!\n    Ok(())\n}\n```\n\n`fn main()` or the specified start function is not allowed to be `async`. Not\nhaving a correct async runtime library setup may cause this error. To fix it,\ndeclare the entry point without `async`:\n\n```\nfn main() -> Result<(), ()> { // ok!\n    Ok(())\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":892,"byte_end":933,"line_start":32,"line_end":32,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"async fn main() -> mini_redis::Result<()> {","highlight_start":1,"highlight_end":42}],"label":"`main` function is not allowed to be `async`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0752]\u001b[0m\u001b[0m\u001b[1m: `main` function is not allowed to be `async`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:32:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0masync fn main() -> mini_redis::Result<()> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`main` function is not allowed to be `async`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 6 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 6 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0277, E0433, E0752.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0433, E0752.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
